admin:
  access_log_path: /dev/stdout
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          access_log:
          - name: accesslog
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: upstream-service
                request_headers_to_add:
                - header:
                    key: "x-jwt-email"
                    value: "%DYNAMIC_METADATA([\"envoy.filters.http.jwt_authn\", \"jwt_payload\", \"email\"])%"

          http_filters:
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                keycloak:
                  issuer: http://3784-180-129-106-95.ngrok.io/realms/dev
                  audiences:
                  - js-console
                  - account
                  remote_jwks:
                    http_uri:
                      uri: http://3784-180-129-106-95.ngrok.io/realms/dev/protocol/openid-connect/certs
                      cluster: keycloak_jwks
                      timeout: 5s
                    cache_duration:
                      seconds: 300
                  jwt_cache_config:
                    jwt_cache_size: 1000
                  forward_payload_header: x-jwt-payload
                  payload_in_metadata: jwt_payload
              rules:
              # No jwt verification is required for /health path
              - match:
                  prefix: /health
              # Jwt verification for provider1 is required for path prefixed with "prefix"
              - match:
                  prefix: /get
                requires:
                  provider_name: keycloak
          - name: envoy.filters.http.router

  clusters:
  - name: upstream-service
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: upstream-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: upstream-service
                port_value: 80

  - name: keycloak_jwks
    connect_timeout: 2s
    type: STRICT_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: keycloak_jwks
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 3784-180-129-106-95.ngrok.io
                port_value: 80
    # For HTTPS
    # transport_socket:
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
    #     sni: 3784-180-129-106-95.ngrok.io
    #     # Server certificate verification is not enabled by default. Configure trusted_ca to enable verification.
    #     common_tls_context:
    #       validation_context:
    #         trusted_ca: {filename: /etc/ssl/certs/ca-certificates.crt}
    #         match_typed_subject_alt_names:
    #         - san_type: DNS
